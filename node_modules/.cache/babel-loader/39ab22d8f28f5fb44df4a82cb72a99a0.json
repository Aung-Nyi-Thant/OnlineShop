{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getAllFood, saveFood, GetFoodById, GetFoodByName, DeleteFood, serchFoodByTaste } from \"./ShopApi\";\n;\nconst initialState = {\n  food: [{\n    _id: \"1\",\n    Food_name: \"\",\n    Prices: \"\",\n    expire_date: \"\",\n    FoodImage: \"\",\n    typeOfTaste: \"\",\n    age_permisssion: \"\",\n    Brand: \"\",\n    Ingredients: \"\",\n    Rating: \"\",\n    textStyle: \"\",\n    country: \"\",\n    ColorForStyle: \"\",\n    like: \"\"\n  }]\n};\nexport const apiGetAllFood = createAsyncThunk('movie/getAllFood', async () => {\n  console.log(\"API get all foods\");\n  const response = await getAllFood();\n  console.log(\"All movie json \", response.data);\n  return response.data;\n});\nexport const apiSaveFood = createAsyncThunk('movie/saveFood', async food => {\n  console.log(\"API save  food\");\n  console.log(food);\n  const response = await saveFood(food);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const getFooById = createAsyncThunk('movie/GetFoodById', async id => {\n  console.log(\"API get  food by id\");\n  const response = await GetFoodById(id);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const getFooByTaste = createAsyncThunk('movie/GetFoodByTaste', async taste => {\n  console.log(\"API get  food by Taste\");\n  const response = await serchFoodByTaste(taste);\n  console.log(\"foods by taste \", response.data);\n  return response.data;\n});\nexport const getFooByName = createAsyncThunk('movie/GetFoodByName', async Name => {\n  console.log(\"API get  food by Name\");\n  const response = await GetFoodByName(Name);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const DeleteFoods = createAsyncThunk('movie/DeleteFood', async food => {\n  console.log(\"API get  food by Name\");\n  const response = await DeleteFood(food);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState,\n  reducers: {\n    addMovie: (state, action) => {//state.items = [...state.items, action.payload];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiGetAllFood.fulfilled, (state, action) => {\n      console.log(\"Api fullfilled \", action.payload);\n      state.food = action.payload;\n    }).addCase(apiSaveFood.fulfilled, (state, action) => {\n      console.log(\"Api save food fulfilled \", action.payload);\n      state.food = [...state.food, action.payload];\n    }).addCase(getFooById.fulfilled, (state, action) => {\n      console.log(\"Api get food by id fulfilled \", action.payload);\n      state.food = [...state.food, action.payload];\n    });\n  }\n});\nexport const {\n  addMovie\n} = movieSlice.actions;\nexport const selectFood = state => state.food.food;\nexport const selectFoodById = (state, foodID) => state.food.food.filter(food => food._id == foodID)[0];\nexport const selectFoodByName = (state, foodName) => state.food.food.filter(food => food.Food_name == foodName)[0];\nexport default movieSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getAllFood","saveFood","GetFoodById","GetFoodByName","DeleteFood","serchFoodByTaste","initialState","food","_id","Food_name","Prices","expire_date","FoodImage","typeOfTaste","age_permisssion","Brand","Ingredients","Rating","textStyle","country","ColorForStyle","like","apiGetAllFood","console","log","response","data","apiSaveFood","getFooById","id","getFooByTaste","taste","getFooByName","Name","DeleteFoods","movieSlice","name","reducers","addMovie","state","action","extraReducers","builder","addCase","fulfilled","payload","actions","selectFood","selectFoodById","foodID","filter","selectFoodByName","foodName","reducer"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/Shop/ShopSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../app/store';\nimport {ToDo, ToDoList} from \"../features/todos/todoSlice\";\nimport {getAllFood, saveFood,GetFoodById, GetFoodByName, DeleteFood, serchFoodByTaste} from \"./ShopApi\";\n\nexport interface Food {\n    _id? : string,\n    Food_name: string,\n    Prices: string,\n    expire_date:string,\n    FoodImage:string,\n    typeOfTaste:string,\n    age_permisssion:string,\n    Brand:string,\n    Ingredients:string,\n    Rating:string,\n    textStyle:string,\n    country:string,\n    ColorForStyle:string,\n    like:string\n};\nexport interface Foods {\n    food: Array<Food>\n}\n\nconst initialState: Foods = {\n    food : [\n        {\n            _id : \"1\",\n            Food_name:\"\",\n            Prices:\"\",\n            expire_date:\"\",\n            FoodImage:\"\",\n            typeOfTaste:\"\",\n            age_permisssion:\"\",\n            Brand:\"\",\n            Ingredients:\"\",\n            Rating:\"\",\n            textStyle:\"\",\n            country:\"\",\n            ColorForStyle:\"\",\n            like:\"\"\n        }\n    ]\n};\nexport const apiGetAllFood = createAsyncThunk(\n    'movie/getAllFood',\n    async () => {\n        console.log(\"API get all foods\");\n        const response = await getAllFood();\n\n        console.log(\"All movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiSaveFood = createAsyncThunk(\n    'movie/saveFood',\n    async (food:Food) => {\n        console.log(\"API save  food\");\n        console.log(food)\n        const response = await saveFood(food);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const getFooById = createAsyncThunk(\n    'movie/GetFoodById',\n    async (id:any) => {\n        console.log(\"API get  food by id\");\n        const response = await GetFoodById(id);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const getFooByTaste = createAsyncThunk(\n    'movie/GetFoodByTaste',\n    async (taste:any) => {\n        console.log(\"API get  food by Taste\");\n        const response = await serchFoodByTaste(taste);\n\n        console.log(\"foods by taste \",response.data);\n        return response.data;\n    }\n);\nexport const getFooByName = createAsyncThunk(\n    'movie/GetFoodByName',\n    async (Name:any) => {\n        console.log(\"API get  food by Name\");\n        const response = await GetFoodByName(Name);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const DeleteFoods = createAsyncThunk(\n    'movie/DeleteFood',\n    async (food:any) => {\n        console.log(\"API get  food by Name\");\n        const response = await DeleteFood(food);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState,\n    reducers: {\n        addMovie: (state, action: PayloadAction<ToDo>) => {\n            //state.items = [...state.items, action.payload];\n        },\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(apiGetAllFood.fulfilled, (state, action) => {\n                console.log(\"Api fullfilled \", action.payload);\n                state.food = action.payload;\n\n            })\n            .addCase(apiSaveFood.fulfilled, (state, action) => {\n                console.log(\"Api save food fulfilled \", action.payload);\n                state.food = [...state.food, action.payload];\n\n            })\n            .addCase(getFooById.fulfilled, (state, action) => {\n                console.log(\"Api get food by id fulfilled \", action.payload);\n                state.food = [...state.food, action.payload];\n\n            })\n\n        }\n    }\n);\n\nexport const { addMovie } = movieSlice.actions;\nexport const selectFood = (state: RootState) => state.food.food;\nexport const selectFoodById =  (state: RootState,foodID:string) => state.food.food.filter(food=>food._id ==foodID)[0];\nexport const selectFoodByName =  (state: RootState,foodName:string) => state.food.food.filter(food=>food.Food_name ==foodName)[0];\nexport default movieSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}