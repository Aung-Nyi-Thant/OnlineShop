{"ast":null,"code":"var _jsxFileName = \"/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/pages/MessagePage.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { apiGetAllMessage, apiSaveMessage, selectMessage } from \"../message/messageSlice\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport React, { useEffect } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport Message from \"../message/MessageUI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messagechema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  year: Yup.number().required('Required')\n});\n\nconst MessageForm = props => {\n  _s();\n\n  let dispatch = useAppDispatch();\n  let message = props.message;\n  console.log('Edit movie ', message);\n  let handleClose = props.handleClose;\n  let initValues = {\n    _id: message ? message._id : '',\n    username: message ? message.username : '',\n    FoodName: message ? message.FoodName : '',\n    count: message ? message.count : '',\n    cost: message ? message.cost : '',\n    date: message ? message.date : \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initValues,\n      validationSchema: Messagechema,\n      onSubmit: values => {\n        // same shape as initial values\n        //console.log(\"Handle Close \", handleClose);\n        console.log(values);\n\n        if (!message) //save\n          {\n            let newMessage = {\n              username: values.username,\n              FoodName: values.FoodName,\n              count: values.count,\n              cost: values.cost,\n              date: values.date\n            };\n            console.log('Movie ', newMessage);\n            dispatch(apiSaveMessage(newMessage));\n          } else //Update movie\n          {\n            let messageToUpdate = {\n              _id: values._id,\n              username: values.username,\n              FoodName: values.FoodName,\n              count: values.count,\n              cost: values.cost,\n              date: values.date\n            };\n          }\n\n        handleClose();\n      },\n      children: _ref => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"title\",\n            name: \"title\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: errors.username.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"year\",\n            name: \"year\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: errors.username.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 60\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: message ? 'Update' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleClose(),\n            className: \"btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\n_s(MessageForm, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = MessageForm;\nexport default function MessageListPage() {\n  _s2();\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(apiGetAllMessage());\n  }, []);\n  const messages = useAppSelector(selectMessage);\n\n  class MessagePage extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        Messages: messages\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.Messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this);\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(MessagePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(MessageListPage, \"b2jaKcdL495VtTMF7OSujxm4fdE=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c2 = MessageListPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MessageForm\");\n$RefreshReg$(_c2, \"MessageListPage\");","map":{"version":3,"names":["apiGetAllMessage","apiSaveMessage","selectMessage","useAppDispatch","useAppSelector","React","useEffect","Form","Formik","Yup","Message","Messagechema","object","shape","title","string","min","max","required","year","number","MessageForm","props","dispatch","message","console","log","handleClose","initValues","_id","username","FoodName","count","cost","date","values","newMessage","messageToUpdate","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","toString","MessageListPage","messages","MessagePage","Component","state","Messages","render","map"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/pages/MessagePage.tsx"],"sourcesContent":["import { apiGetAllMessage, apiSaveMessage, Message_, selectMessage } from \"../message/messageSlice\";\nimport {useAppDispatch, useAppSelector} from \"../app/hooks\";\nimport {\n    apiDeleteMovie,\n} from \"../features/movie/movieSlice\";\nimport React, {Component, useEffect, useState} from \"react\";\nimport {Modal} from \"react-bootstrap\";\nimport {Form, Formik} from \"formik\";\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\n\nimport {useDispatch} from \"react-redux\";\n\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { login } from \"../features/Login/UsersSlice\";\nimport Message from \"../message/MessageUI\"\nconst Messagechema = Yup.object().shape({\n    title: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n\n    year: Yup.number().required('Required'),\n});\nconst MessageForm = (props:any)=>{\n    let dispatch = useAppDispatch();\n    let message = props.message;\n    console.log('Edit movie ',message);\n    let handleClose = props.handleClose;\n    let initValues ={\n        _id : message? message._id:'',\n        username:  message? message.username:'',\n        FoodName:  message? message.FoodName:'',\n        count: message? message.count:'',\n        cost:message? message.cost:'',\n        date:message? message.date:\"\",\n    }\n    return (<div>\n        \n        <Formik\n            initialValues={initValues}\n            validationSchema={Messagechema}\n            onSubmit={values => {\n                // same shape as initial values\n                //console.log(\"Handle Close \", handleClose);\n                console.log(values);\n\n                if (!message)//save\n                {\n                    let newMessage: Message_ = {\n                        username:values.username,\n                        FoodName:values.FoodName,\n                        count:values.count,\n                        cost:values.cost,\n                        date:values.date\n                    }\n\n                    console.log('Movie ', newMessage);\n                    dispatch(apiSaveMessage(newMessage));\n                }\n                else //Update movie\n                {\n                    let messageToUpdate: Message_ = {\n                        _id : values._id,\n                        username:values.username,\n                        FoodName:values.FoodName,\n                        count:values.count,\n                        cost:values.cost,\n                        date:values.date\n                    }\n\n                }\n\n                handleClose();\n            }}\n        >\n            {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting\n              }) => (\n                <Form>\n                    <label>Title</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           id=\"title\"\n                           name=\"title\"\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                           value={values.username}\n                    />\n                    {errors.username && touched.username ? (\n                        <div className=\"alert alert-danger\">{errors.username.toString()}</div>\n                    ) : null}\n\n                    <label>Year</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           id=\"year\"\n                           name=\"year\"\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                           value={values.username}\n                    />\n                    {errors.username && touched.username ? <div className=\"alert alert-danger\">{errors.username.toString()}</div> : null}\n                    <button type=\"submit\"\n                            className=\"btn btn-primary\">{message?'Update':'Save'}\n                    </button>\n                    <button type=\"button\"\n                            onClick={()=>handleClose()}\n                            className=\"btn\">Cancel\n                    </button>\n                </Form>\n            )}\n        </Formik>\n\n    </div>);\n};\nexport default function MessageListPage() {\n    const dispatch = useAppDispatch();\n    useEffect(()=>{\n        dispatch(apiGetAllMessage());\n    },[]);\n\n    const messages = useAppSelector(selectMessage);\n\n    class MessagePage extends React.Component{\n        state = {Messages:messages}\n        render(){\n            return(\n                <div>\n                    {\n                        this.state.Messages.map((message:Message_)=>\n                        <Message \n                            message={message}\n                        />)\n                    }\n                </div>\n            )\n        }\n    }\n    return(\n        <MessagePage/>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}