{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getAllReviewByMovieId } from \"./reviewApi\";\n;\n;\nconst initialState = {\n  reviews: [\n    /* {\n         _id : \"1\",\n         rating :5,\n         review: \"Good Movie\",\n         movie : {\n             _id:\"622f39a0b0b080b80fcb1083\",\n             title:\"Some Movie\",\n             year:2009,\n         }\n     }*/\n  ]\n};\nexport const apiGetAllReviewByMovieId = createAsyncThunk('review/getAllReviewByMovieId', async movieId => {\n  console.log(\"API get all review\");\n  const response = await getAllReviewByMovieId(movieId);\n  console.log(\"All review json \", response.data);\n  return response.data;\n});\nexport const reviewSlice = createSlice({\n  name: 'review',\n  initialState,\n  reducers: {\n    addReview: (state, action) => {//state.items = [...state.items, action.payload];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiGetAllReviewByMovieId.fulfilled, (state, action) => {\n      console.log(\"Api apiGetAllReviewByMovieId fullfilled \", action.payload);\n      state.reviews = [...action.payload];\n    });\n  }\n});\nexport const {\n  addReview\n} = reviewSlice.actions;\nexport const selectReviewMovieById = (state, movieId) => state.review.reviews.filter(review => review.movie._id == movieId);\nexport const apiGetAllReviewByMovieIfNotLoaded = movieId => (dispatch, getState) => {\n  const reviews = selectReviewMovieById(getState(), movieId);\n  console.log('Review length ', reviews);\n\n  if (reviews.length === 0) {\n    dispatch(apiGetAllReviewByMovieId(movieId));\n  }\n};\nexport default reviewSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getAllReviewByMovieId","initialState","reviews","apiGetAllReviewByMovieId","movieId","console","log","response","data","reviewSlice","name","reducers","addReview","state","action","extraReducers","builder","addCase","fulfilled","payload","actions","selectReviewMovieById","review","filter","movie","_id","apiGetAllReviewByMovieIfNotLoaded","dispatch","getState","length","reducer"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/features/review/reviewSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {\n    apiDeleteMovie,\n    apiGetAllMovie,\n    apiSaveMovie,\n    apiUpdateMovie,\n    Movie,\n    MovieList,\n    movieSlice\n} from \"../movie/movieSlice\";\nimport {ToDo} from \"../todos/todoSlice\";\nimport {getAllMovie} from \"../movie/movieApi\";\nimport {getAllReviewByMovieId} from \"./reviewApi\";\nimport {incrementByAmount, selectCount} from \"../counter/counterSlice\";\n\nexport interface Review {\n    _id? : string,\n    rating: number,\n    review: string,\n    movie: Movie,\n};\nexport interface ReviewList {\n    reviews: Array<Review>\n};\n\nconst initialState: ReviewList = {\n    reviews : [\n       /* {\n            _id : \"1\",\n            rating :5,\n            review: \"Good Movie\",\n            movie : {\n                _id:\"622f39a0b0b080b80fcb1083\",\n                title:\"Some Movie\",\n                year:2009,\n            }\n        }*/\n    ]\n};\nexport const apiGetAllReviewByMovieId = createAsyncThunk(\n    'review/getAllReviewByMovieId',\n    async (movieId:string) => {\n        console.log(\"API get all review\");\n        const response = await getAllReviewByMovieId(movieId);\n\n        console.log(\"All review json \",response.data);\n        return response.data;\n    }\n);\nexport const reviewSlice = createSlice({\n    name: 'review',\n    initialState,\n    reducers: {\n        addReview: (state, action: PayloadAction<ToDo>) => {\n            //state.items = [...state.items, action.payload];\n        },\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(apiGetAllReviewByMovieId.fulfilled, (state, action) => {\n                console.log(\"Api apiGetAllReviewByMovieId fullfilled \", action.payload);\n                state.reviews = [...action.payload];\n\n            });\n\n    }\n});\nexport const { addReview } = reviewSlice.actions;\nexport const selectReviewMovieById =  (state: RootState,movieId:string) => state.review.reviews.filter(review=>review.movie._id ==movieId);\nexport const apiGetAllReviewByMovieIfNotLoaded =\n    (movieId: string): AppThunk =>\n        (dispatch, getState) => {\n\n            const reviews = selectReviewMovieById(getState(),movieId);\n            console.log('Review length ',reviews);\n            if (reviews.length === 0) {\n                dispatch(apiGetAllReviewByMovieId(movieId));\n            }\n        };\nexport default reviewSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AAaA,SAAQC,qBAAR,QAAoC,aAApC;AAQC;AAGA;AAED,MAAMC,YAAwB,GAAG;EAC7BC,OAAO,EAAG;IACP;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVc;AADmB,CAAjC;AAcA,OAAO,MAAMC,wBAAwB,GAAGL,gBAAgB,CACpD,8BADoD,EAEpD,MAAOM,OAAP,IAA0B;EACtBC,OAAO,CAACC,GAAR,CAAY,oBAAZ;EACA,MAAMC,QAAQ,GAAG,MAAMP,qBAAqB,CAACI,OAAD,CAA5C;EAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BC,QAAQ,CAACC,IAAxC;EACA,OAAOD,QAAQ,CAACC,IAAhB;AACH,CARmD,CAAjD;AAUP,OAAO,MAAMC,WAAW,GAAGV,WAAW,CAAC;EACnCW,IAAI,EAAE,QAD6B;EAEnCT,YAFmC;EAGnCU,QAAQ,EAAE;IACNC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAwC,CAC/C;IACH;EAHK,CAHyB;EASnCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACad,wBAAwB,CAACe,SADtC,EACiD,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC5DT,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDQ,MAAM,CAACK,OAA/D;MACAN,KAAK,CAACX,OAAN,GAAgB,CAAC,GAAGY,MAAM,CAACK,OAAX,CAAhB;IAEH,CALL;EAOH;AAjBkC,CAAD,CAA/B;AAmBP,OAAO,MAAM;EAAEP;AAAF,IAAgBH,WAAW,CAACW,OAAlC;AACP,OAAO,MAAMC,qBAAqB,GAAI,CAACR,KAAD,EAAkBT,OAAlB,KAAqCS,KAAK,CAACS,MAAN,CAAapB,OAAb,CAAqBqB,MAArB,CAA4BD,MAAM,IAAEA,MAAM,CAACE,KAAP,CAAaC,GAAb,IAAmBrB,OAAvD,CAApE;AACP,OAAO,MAAMsB,iCAAiC,GACzCtB,OAAD,IACI,CAACuB,QAAD,EAAWC,QAAX,KAAwB;EAEpB,MAAM1B,OAAO,GAAGmB,qBAAqB,CAACO,QAAQ,EAAT,EAAYxB,OAAZ,CAArC;EACAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BJ,OAA7B;;EACA,IAAIA,OAAO,CAAC2B,MAAR,KAAmB,CAAvB,EAA0B;IACtBF,QAAQ,CAACxB,wBAAwB,CAACC,OAAD,CAAzB,CAAR;EACH;AACJ,CATF;AAUP,eAAeK,WAAW,CAACqB,OAA3B"},"metadata":{},"sourceType":"module"}