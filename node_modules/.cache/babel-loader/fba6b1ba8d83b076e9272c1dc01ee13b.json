{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { deleteMessage, getAllMessage, saveMessage } from \"./messageApi\";\n;\nconst initialState = {\n  message: [{\n    _id: \"1\",\n    username: \"\",\n    FoodName: \"\",\n    count: \"\",\n    cost: \"\"\n  }]\n};\nexport const apiGetAllMessage = _s(createAsyncThunk('movie/getAllMessage', _s(async () => {\n  _s();\n\n  console.log(\"API get all message\");\n  const [posts, setPosts] = useState([]);\n  const response = await getAllMessage();\n  console.log(\"All movie json \", response.data);\n  return response.data;\n}, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\")), \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\nexport const apiSaveMessage = createAsyncThunk('movie/saveMessage', async message => {\n  console.log(\"API save  movie\");\n  const response = await saveMessage(message);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const apiDeleteMessage = createAsyncThunk('movie/deleteMessage', async message => {\n  console.log(\"API delete  message\");\n  const response = await deleteMessage(message);\n  console.log(\"delete message json \", response.data);\n  return response.data;\n});\nexport const movieSlice = createSlice({\n  name: 'message',\n  initialState,\n  reducers: {\n    addMovie: (state, action) => {//state.items = [...state.items, action.payload];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiGetAllMessage.fulfilled, (state, action) => {\n      console.log(\"Api fullfilled \", action.payload);\n      state.message = action.payload;\n    }).addCase(apiSaveMessage.fulfilled, (state, action) => {\n      console.log(\"Api save message fulfilled \", action.payload);\n      state.message = [...state.message, action.payload];\n    });\n  }\n});\nexport const {\n  addMovie\n} = movieSlice.actions;\nexport const selectMessage = state => state.message.message;\nexport const selectMovieById = (state, movieId) => state.movie.movies.filter(movie => movie._id == movieId)[0];\nexport default movieSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","useState","deleteMessage","getAllMessage","saveMessage","initialState","message","_id","username","FoodName","count","cost","apiGetAllMessage","console","log","posts","setPosts","response","data","apiSaveMessage","apiDeleteMessage","movieSlice","name","reducers","addMovie","state","action","extraReducers","builder","addCase","fulfilled","payload","actions","selectMessage","selectMovieById","movieId","movie","movies","filter","reducer"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/message/messageSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { RootState, AppThunk } from '../app/store';\nimport {ToDo, ToDoList} from \"../features/todos/todoSlice\"\nimport {deleteMessage, getAllMessage,saveMessage} from \"./messageApi\";\n\nexport interface Message_ {\n    _id? : string,\n    username:string,\n    FoodName:string,\n    count:string,\n    cost:string\n};\nexport interface MessageList {\n    message: Array<Message_>\n}\n\nconst initialState: MessageList = {\n    message : [\n        {\n            _id : \"1\",\n            username:\"\",\n            FoodName:\"\",\n            count:\"\",\n            cost:\"\"\n        }\n    ]\n};\nexport const apiGetAllMessage = createAsyncThunk(\n    'movie/getAllMessage',\n    async () => {\n        console.log(\"API get all message\");\n        const [posts, setPosts]=useState([])\n        const response = await getAllMessage();\n\n        console.log(\"All movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiSaveMessage = createAsyncThunk(\n    'movie/saveMessage',\n    async (message:Message_) => {\n        console.log(\"API save  movie\");\n        const response = await saveMessage(message);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiDeleteMessage = createAsyncThunk(\n    'movie/deleteMessage',\n    async (message:Message_) => {\n        console.log(\"API delete  message\");\n        const response = await deleteMessage(message);\n\n        console.log(\"delete message json \",response.data);\n        return response.data;\n    }\n);\nexport const movieSlice = createSlice({\n    name: 'message',\n    initialState,\n    reducers: {\n        addMovie: (state, action: PayloadAction<ToDo>) => {\n            //state.items = [...state.items, action.payload];\n        },\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(apiGetAllMessage.fulfilled, (state, action) => {\n                console.log(\"Api fullfilled \", action.payload);\n                state.message = action.payload;\n\n            })\n            .addCase(apiSaveMessage.fulfilled, (state, action) => {\n                console.log(\"Api save message fulfilled \", action.payload);\n                state.message = [...state.message, action.payload];\n\n            })\n    }\n});\n\nexport const { addMovie } = movieSlice.actions;\nexport const selectMessage = (state: RootState) => state.message.message;\nexport const selectMovieById =  (state: RootState,movieId:string) => state.movie.movies.filter(movie=>movie._id ==movieId)[0];\nexport default movieSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}