{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getallUsers, saveUsers } from \"./LoginApi\";\n;\nconst initialState = {\n  users: [{\n    _id: \"1\",\n    username: \"AungNyi\",\n    password: \"accmobile\"\n  }]\n};\nexport const apiGetAllUsers = createAsyncThunk('movie/GetallUser', async () => {\n  console.log(\"API get all movie\");\n  const response = await getallUsers();\n  console.log(\"All movie json \", response.data);\n  return response.data;\n});\nexport const apiSaveMovie = createAsyncThunk('movie/saveMovie', async users => {\n  console.log(\"API save  movie\");\n  const response = await saveUsers(users);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState,\n  reducers: {\n    addMovie: (state, action) => {//state.items = [...state.items, action.payload];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiGetAllUsers.fulfilled, (state, action) => {\n      console.log(\"Api fullfilled \", action.payload);\n      state.users = action.payload;\n    }).addCase(apiSaveMovie.fulfilled, (state, action) => {\n      console.log(\"Api save movie fulfilled \", action.payload);\n      state.users = [...state.users, action.payload];\n    });\n  }\n});\nexport const {\n  addMovie\n} = movieSlice.actions;\nexport const selectMovie = state => state.movie.movies;\nexport const selectMovieById = (state, movieId) => state.movie.movies.filter(movie => movie._id == movieId)[0];\nexport default movieSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getallUsers","saveUsers","initialState","users","_id","username","password","apiGetAllUsers","console","log","response","data","apiSaveMovie","movieSlice","name","reducers","addMovie","state","action","extraReducers","builder","addCase","fulfilled","payload","actions","selectMovie","movie","movies","selectMovieById","movieId","filter","reducer"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/features/Login/UsersSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {ToDo, ToDoList} from \"../todos/todoSlice\";\nimport {getallUsers,saveUsers} from \"./LoginApi\";\n\nexport interface Users {\n    // _id? : string,\n    // title: string,\n    // year: number,\n    // image_adress:string,\n    // background_img:string,\n    // color:string,\n    // summary:string\n    _id? : string,\n    username:string,\n    password:string\n};\nexport interface MovieList {\n    users: Array<Users>\n}\n\nconst initialState: MovieList = {\n    users : [\n        {\n            _id : \"1\",\n            username:\"AungNyi\",\n            password:\"accmobile\"\n        }\n    ]\n};\nexport const apiGetAllUsers = createAsyncThunk(\n    'movie/GetallUser',\n    async () => {\n        console.log(\"API get all movie\");\n        const response = await getallUsers();\n\n        console.log(\"All movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiSaveMovie = createAsyncThunk(\n    'movie/saveMovie',\n    async (users:Users) => {\n        console.log(\"API save  movie\");\n        const response = await saveUsers(users);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState,\n    reducers: {\n        addMovie: (state, action: PayloadAction<ToDo>) => {\n            //state.items = [...state.items, action.payload];\n        },\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(apiGetAllUsers.fulfilled, (state, action) => {\n                console.log(\"Api fullfilled \", action.payload);\n                state.users = action.payload;\n\n            })\n            .addCase(apiSaveMovie.fulfilled, (state, action) => {\n                console.log(\"Api save movie fulfilled \", action.payload);\n                state.users = [...state.users, action.payload];\n\n            })\n    }\n});\n\nexport const { addMovie } = movieSlice.actions;\nexport const selectMovie = (state: RootState) => state.movie.movies;\nexport const selectMovieById =  (state: RootState,movieId:string) => state.movie.movies.filter(movie=>movie._id ==movieId)[0];\nexport default movieSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AAGA,SAAQC,WAAR,EAAoBC,SAApB,QAAoC,YAApC;AAaC;AAKD,MAAMC,YAAuB,GAAG;EAC5BC,KAAK,EAAG,CACJ;IACIC,GAAG,EAAG,GADV;IAEIC,QAAQ,EAAC,SAFb;IAGIC,QAAQ,EAAC;EAHb,CADI;AADoB,CAAhC;AASA,OAAO,MAAMC,cAAc,GAAGT,gBAAgB,CAC1C,kBAD0C,EAE1C,YAAY;EACRU,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACA,MAAMC,QAAQ,GAAG,MAAMV,WAAW,EAAlC;EAEAQ,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BC,QAAQ,CAACC,IAAvC;EACA,OAAOD,QAAQ,CAACC,IAAhB;AACH,CARyC,CAAvC;AAUP,OAAO,MAAMC,YAAY,GAAGd,gBAAgB,CACxC,iBADwC,EAExC,MAAOK,KAAP,IAAuB;EACnBK,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACA,MAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACE,KAAD,CAAhC;EAEAK,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BC,QAAQ,CAACC,IAAxC;EACA,OAAOD,QAAQ,CAACC,IAAhB;AACH,CARuC,CAArC;AAUP,OAAO,MAAME,UAAU,GAAGd,WAAW,CAAC;EAClCe,IAAI,EAAE,OAD4B;EAElCZ,YAFkC;EAGlCa,QAAQ,EAAE;IACNC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAwC,CAC9C;IACH;EAHK,CAHwB;EASlCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACad,cAAc,CAACe,SAD5B,EACuC,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAClDV,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,MAAM,CAACK,OAAtC;MACAN,KAAK,CAACd,KAAN,GAAce,MAAM,CAACK,OAArB;IAEH,CALL,EAMKF,OANL,CAMaT,YAAY,CAACU,SAN1B,EAMqC,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAChDV,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCS,MAAM,CAACK,OAAhD;MACAN,KAAK,CAACd,KAAN,GAAc,CAAC,GAAGc,KAAK,CAACd,KAAV,EAAiBe,MAAM,CAACK,OAAxB,CAAd;IAEH,CAVL;EAWH;AArBiC,CAAD,CAA9B;AAwBP,OAAO,MAAM;EAAEP;AAAF,IAAeH,UAAU,CAACW,OAAhC;AACP,OAAO,MAAMC,WAAW,GAAIR,KAAD,IAAsBA,KAAK,CAACS,KAAN,CAAYC,MAAtD;AACP,OAAO,MAAMC,eAAe,GAAI,CAACX,KAAD,EAAkBY,OAAlB,KAAqCZ,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBG,MAAnB,CAA0BJ,KAAK,IAAEA,KAAK,CAACtB,GAAN,IAAYyB,OAA7C,EAAsD,CAAtD,CAA9D;AACP,eAAehB,UAAU,CAACkB,OAA1B"},"metadata":{},"sourceType":"module"}