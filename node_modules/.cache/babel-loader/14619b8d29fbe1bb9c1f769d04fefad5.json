{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { deleteMovie, getAllMovie, saveMovie, updateMovie } from \"./movieApi\";\n;\nconst initialState = {\n  movies: [{\n    _id: \"1\",\n    title: \"Movie 1\",\n    year: 2018,\n    image_adress: \"\",\n    background_img: \"\",\n    color: \"\"\n  }]\n};\nexport const apiGetAllMovie = createAsyncThunk('movie/getAllMovie', async () => {\n  console.log(\"API get all movie\");\n  const response = await getAllMovie();\n  console.log(\"All movie json \", response.data);\n  return response.data;\n});\nexport const apiSaveMovie = createAsyncThunk('movie/saveMovie', async movie => {\n  console.log(\"API save  movie\");\n  const response = await saveMovie(movie);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const apiUpdateMovie = createAsyncThunk('movie/updateMovie', async movie => {\n  console.log(\"API update  movie\");\n  const response = await updateMovie(movie);\n  console.log(\"Update movie json \", response.data);\n  return response.data;\n});\nexport const apiDeleteMovie = createAsyncThunk('movie/DeleteMovie', async movie => {\n  console.log(\"API delete  movie\");\n  const response = await deleteMovie(movie);\n  console.log(\"Delete movie json \", response.data);\n  return response.data;\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState,\n  reducers: {\n    addMovie: (state, action) => {//state.items = [...state.items, action.payload];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiGetAllMovie.fulfilled, (state, action) => {\n      console.log(\"Api fullfilled \", action.payload);\n      state.movies = action.payload;\n    }).addCase(apiSaveMovie.fulfilled, (state, action) => {\n      console.log(\"Api save movie fulfilled \", action.payload);\n      state.movies = [...state.movies, action.payload];\n    }).addCase(apiUpdateMovie.fulfilled, (state, action) => {\n      console.log(\"Api Update movie fulfilled \", action.payload);\n      state.movies = state.movies.map(movie => movie._id == action.payload._id ? action.payload : movie);\n    }).addCase(apiDeleteMovie.fulfilled, (state, action) => {\n      console.log(\"Api delete movie fulfilled \", action.payload);\n      state.movies = state.movies.filter(movie => movie._id != action.payload._id);\n    });\n  }\n});\nexport const {\n  addMovie\n} = movieSlice.actions;\nexport const selectMovie = state => state.movie.movies;\nexport const selectMovieById = (state, movieId) => state.movie.movies.filter(movie => movie._id == movieId)[0];\nexport default movieSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","deleteMovie","getAllMovie","saveMovie","updateMovie","initialState","movies","_id","title","year","image_adress","background_img","color","apiGetAllMovie","console","log","response","data","apiSaveMovie","movie","apiUpdateMovie","apiDeleteMovie","movieSlice","name","reducers","addMovie","state","action","extraReducers","builder","addCase","fulfilled","payload","map","filter","actions","selectMovie","selectMovieById","movieId","reducer"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/features/movie/movieSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport {ToDo, ToDoList} from \"../todos/todoSlice\";\nimport {deleteMovie, getAllMovie, saveMovie, updateMovie} from \"./movieApi\";\n\nexport interface Movie {\n    _id? : string,\n    title: string,\n    year: number,\n    image_adress:string,\n    background_img:string,\n    color:string\n};\nexport interface MovieList {\n    movies: Array<Movie>\n}\n\nconst initialState: MovieList = {\n    movies : [\n        {\n            _id : \"1\",\n            title : \"Movie 1\",\n            year: 2018,\n            image_adress:\"\",\n            background_img:\"\",\n            color:\"\"\n        }\n    ]\n};\nexport const apiGetAllMovie = createAsyncThunk(\n    'movie/getAllMovie',\n    async () => {\n        console.log(\"API get all movie\");\n        const response = await getAllMovie();\n\n        console.log(\"All movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiSaveMovie = createAsyncThunk(\n    'movie/saveMovie',\n    async (movie:Movie) => {\n        console.log(\"API save  movie\");\n        const response = await saveMovie(movie);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiUpdateMovie = createAsyncThunk(\n    'movie/updateMovie',\n    async (movie:Movie) => {\n        console.log(\"API update  movie\");\n        const response = await updateMovie(movie);\n\n        console.log(\"Update movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiDeleteMovie = createAsyncThunk(\n    'movie/DeleteMovie',\n    async (movie:Movie) => {\n        console.log(\"API delete  movie\");\n        const response = await deleteMovie(movie);\n\n        console.log(\"Delete movie json \",response.data);\n        return response.data;\n    }\n);\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState,\n    reducers: {\n        addMovie: (state, action: PayloadAction<ToDo>) => {\n            //state.items = [...state.items, action.payload];\n        },\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(apiGetAllMovie.fulfilled, (state, action) => {\n                console.log(\"Api fullfilled \", action.payload);\n                state.movies = action.payload;\n\n            })\n            .addCase(apiSaveMovie.fulfilled, (state, action) => {\n                console.log(\"Api save movie fulfilled \", action.payload);\n                state.movies = [...state.movies, action.payload];\n\n            })\n            .addCase(apiUpdateMovie.fulfilled, (state, action) => {\n                console.log(\"Api Update movie fulfilled \", action.payload);\n                state.movies = state.movies.map(movie=>\n                    movie._id==action.payload._id?\n                    action.payload : movie);\n\n            })\n            .addCase(apiDeleteMovie.fulfilled, (state, action) => {\n                console.log(\"Api delete movie fulfilled \", action.payload);\n                state.movies = state.movies.filter(movie=>movie._id!= action.payload._id);\n\n        });\n    }\n});\n\nexport const { addMovie } = movieSlice.actions;\nexport const selectMovie = (state: RootState) => state.movie.movies;\nexport const selectMovieById =  (state: RootState,movieId:string) => state.movie.movies.filter(movie=>movie._id ==movieId)[0];\nexport default movieSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}