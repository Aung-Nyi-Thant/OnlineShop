{"ast":null,"code":"var _jsxFileName = \"/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/message/MessageUI.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport { deleteMessage, saveMessage } from \"./messageApi\";\nimport \"./MessagePageStyle.css\";\nimport { apiGetAllMessage, selectMessage } from \"./messageSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Message(props) {\n  _s();\n\n  const message_ = props.message;\n  let isAdmin = props.isAdmin;\n  console.log(isAdmin);\n  const dispatch = useAppDispatch();\n  let navigate = useNavigate();\n  let {\n    Username\n  } = useParams();\n  console.log(\"BtnDelete\");\n  useEffect(() => {\n    dispatch(apiGetAllMessage());\n  }, []);\n  const messages = useAppSelector(selectMessage);\n  let message_2 = message_.Message;\n  let Username1 = message_.username;\n  let FoodName1 = message_.FoodName;\n  let Date1 = message_.date;\n  let ImageAdress = \"\";\n  let Date_1 = \"Date :\";\n\n  if (FoodName1.length <= 8) {\n    Date_1 = \"__\" + Date_1;\n  }\n\n  if (message_2 == undefined) {\n    message_2 = \"\";\n  }\n\n  let reaload = `message`;\n  let message_1 = \"Username :\" + Username1 + \"\\r\\n\" + \"FoodName :\" + FoodName1 + \"\\r\\n\" + Date_1 + Date1 + \"\\r\\n\" + message_2;\n  console.log(message_);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"Messagecount\",\n            children: message_1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"OpenBtn\",\n          onClick: () => {\n            navigate(`/${Username}/message/detail/${message_._id}`);\n          },\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"DeleteBtn\",\n          onClick: () => {\n            if (isAdmin == false) {\n              let message = {\n                username: message_.username + \"_DFromUser\",\n                cost: message_.cost,\n                count: message_.count,\n                FoodName: message_.FoodName,\n                date: message_.date,\n                Message: message_.Message\n              };\n              deleteMessage(message_);\n              saveMessage(message);\n            } else {\n              deleteMessage(message_);\n            }\n\n            navigate(`/0/${reaload}/${Username}/reaload`);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 20\n  }, this);\n}\n\n_s(Message, \"qlAqLJGcJmUdPB28TQj3LCOY8Qg=\", false, function () {\n  return [useAppDispatch, useNavigate, useParams, useAppSelector];\n});\n\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useEffect","useParams","useNavigate","useAppDispatch","useAppSelector","deleteMessage","saveMessage","apiGetAllMessage","selectMessage","Message","props","message_","message","isAdmin","console","log","dispatch","navigate","Username","messages","message_2","Username1","username","FoodName1","FoodName","Date1","date","ImageAdress","Date_1","length","undefined","reaload","message_1","_id","cost","count"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/message/MessageUI.tsx"],"sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport {\n    useParams,\n    useNavigate,\n    useLocation,\n    Link,\n} from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport MessageListPage from \"../pages/MessagePage\";\nimport Reaload from \"../pages/reload\";\nimport reaload from \"../pages/reload\";\nimport { apiGetAllFood, selectFood } from \"../Shop/ShopSlice\";\nimport { deleteMessage, saveMessage } from \"./messageApi\";\nimport \"./MessagePageStyle.css\"\nimport { apiGetAllMessage, Message_, selectMessage } from \"./messageSlice\";\nexport default function Message(this: any, props:any){\n    const message_:Message_ = props.message;\n    let isAdmin = props.isAdmin\n    console.log(isAdmin)\n    const dispatch = useAppDispatch();\n    let navigate = useNavigate();\n    let {Username} = useParams();\n        console.log(\"BtnDelete\")\n    useEffect(()=>{\n        dispatch(apiGetAllMessage());\n    },[]);\n    const messages = useAppSelector(selectMessage);\n    let message_2 = message_.Message\n    let Username1 = message_.username\n    let FoodName1 = message_.FoodName\n    let Date1 = message_.date\n    let ImageAdress=\"\"\n    let Date_1 = \"Date :\"\n    if (FoodName1.length <= 8){\n        Date_1 = \"__\"+Date_1\n    }\n    if(message_2 == undefined){\n        message_2=\"\"\n    }\n    let reaload = `message`\n    let message_1 = \"Username :\"+Username1+\"\\r\\n\"+\"FoodName :\"+FoodName1+\"\\r\\n\"+Date_1+Date1+\"\\r\\n\"+message_2\n    console.log(message_) \n            return(<div><div>\n                <div className={\"message_div\"}>\n                    <div className={\"messageDiv\"}>\n                    <h6 className={\"Messagecount\"}>{message_1}</h6>\n                    </div>\n                    <button className={\"OpenBtn\"} onClick={()=>{\n                        navigate(`/${Username}/message/detail/${message_._id}`)\n                    }}>Open</button>\n                    <button className={\"DeleteBtn\"} onClick={()=>{\n                        if(isAdmin == false){\n                            let message:Message_ = {\n                                username:message_.username+\"_DFromUser\",\n                                cost: message_.cost,\n                                count:message_.count,\n                                FoodName:message_.FoodName,\n                                date:message_.date,\n                                Message:message_.Message\n                            }\n                            deleteMessage(message_)\n                            saveMessage(message)\n                        }else{\n                            deleteMessage(message_)\n                        }\n                       navigate(`/0/${reaload}/${Username}/reaload`)\n                    }}>Delete</button>\n                </div>\n                </div></div>)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}