{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n// import {ToDo, ToDoList} from \"../todos/todoSlice\";\nimport { getAllFood } from \"./ShopApi\";\n;\nconst initialState = {\n  movies: [{\n    _id: \"1\",\n    Food_name: \"\",\n    prices: \"\",\n    expire_date: \"\",\n    FoodImage: \"\",\n    typeOfTaste: \"\",\n    age_permisssion: \"\",\n    Brand: \"\",\n    Ingredients: \"\",\n    Rating: \"\",\n    textStyle: \"\",\n    country: \"\",\n    ColorForStyle: \"\"\n  }]\n};\nexport const apiGetAllFood = createAsyncThunk('movie/getAllMovie', async () => {\n  console.log(\"API get all movie\");\n  const response = await getAllFood();\n  console.log(\"All movie json \", response.data);\n  return response.data;\n});\nexport const apiSaveMovie = createAsyncThunk('movie/saveMovie', async food => {\n  console.log(\"API save  movie\");\n  const response = await saveMovie(movie);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const apiUpdateMovie = createAsyncThunk('movie/updateMovie', async movie => {\n  console.log(\"API update  movie\");\n  const response = await updateMovie(movie);\n  console.log(\"Update movie json \", response.data);\n  return response.data;\n});\nexport const apiDeleteMovie = createAsyncThunk('movie/DeleteMovie', async movie => {\n  console.log(\"API delete  movie\");\n  const response = await deleteMovie(movie);\n  console.log(\"Delete movie json \", response.data);\n  return response.data;\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState,\n  reducers: {\n    addMovie: (state, action) => {//state.items = [...state.items, action.payload];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiGetAllFood.fulfilled, (state, action) => {\n      console.log(\"Api fullfilled \", action.payload);\n      state.movies = action.payload;\n    });\n  }\n});\nexport const {\n  addMovie\n} = movieSlice.actions;\nexport const selectMovie = state => state.movie.movies;\nexport const selectMovieById = (state, movieId) => state.movie.movies.filter(movie => movie._id == movieId)[0];\nexport default movieSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getAllFood","initialState","movies","_id","Food_name","prices","expire_date","FoodImage","typeOfTaste","age_permisssion","Brand","Ingredients","Rating","textStyle","country","ColorForStyle","apiGetAllFood","console","log","response","data","apiSaveMovie","food","saveMovie","movie","apiUpdateMovie","updateMovie","apiDeleteMovie","deleteMovie","movieSlice","name","reducers","addMovie","state","action","extraReducers","builder","addCase","fulfilled","payload","actions","selectMovie","selectMovieById","movieId","filter","reducer"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/Shop/ShopSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../app/store';\n// import {ToDo, ToDoList} from \"../todos/todoSlice\";\nimport {getAllFood} from \"./ShopApi\";\n\nexport interface Food {\n    _id? : string,\n    Food_name: string,\n    prices: string,\n    expire_date:string,\n    FoodImage:string,\n    typeOfTaste:string,\n    age_permisssion:string,\n    Brand:string,\n    Ingredients:string,\n    Rating:string,\n    textStyle:string,\n    country:string,\n    ColorForStyle:string\n};\nexport interface MovieList {\n    movies: Array<Food>\n}\n\nconst initialState: MovieList = {\n    movies : [\n        {\n            _id : \"1\",\n            Food_name:\"\",\n            prices:\"\",\n            expire_date:\"\",\n            FoodImage:\"\",\n            typeOfTaste:\"\",\n            age_permisssion:\"\",\n            Brand:\"\",\n            Ingredients:\"\",\n            Rating:\"\",\n            textStyle:\"\",\n            country:\"\",\n            ColorForStyle:\"\"\n        }\n    ]\n};\nexport const apiGetAllFood = createAsyncThunk(\n    'movie/getAllMovie',\n    async () => {\n        console.log(\"API get all movie\");\n        const response = await getAllFood();\n\n        console.log(\"All movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiSaveMovie = createAsyncThunk(\n    'movie/saveMovie',\n    async (food:Food) => {\n        console.log(\"API save  movie\");\n        const response = await saveMovie(movie);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiUpdateMovie = createAsyncThunk(\n    'movie/updateMovie',\n    async (movie:Movie) => {\n        console.log(\"API update  movie\");\n        const response = await updateMovie(movie);\n\n        console.log(\"Update movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiDeleteMovie = createAsyncThunk(\n    'movie/DeleteMovie',\n    async (movie:Movie) => {\n        console.log(\"API delete  movie\");\n        const response = await deleteMovie(movie);\n\n        console.log(\"Delete movie json \",response.data);\n        return response.data;\n    }\n);\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState,\n    reducers: {\n        addMovie: (state, action: PayloadAction<ToDo>) => {\n            //state.items = [...state.items, action.payload];\n        },\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(apiGetAllFood.fulfilled, (state, action) => {\n                console.log(\"Api fullfilled \", action.payload);\n                state.movies = action.payload;\n\n            })\n        }\n    }\n);\n\nexport const { addMovie } = movieSlice.actions;\nexport const selectMovie = (state: RootState) => state.movie.movies;\nexport const selectMovieById =  (state: RootState,movieId:string) => state.movie.movies.filter(movie=>movie._id ==movieId)[0];\nexport default movieSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}