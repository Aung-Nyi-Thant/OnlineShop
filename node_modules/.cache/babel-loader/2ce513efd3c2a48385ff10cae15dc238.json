{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getAllFood, saveFood, GetFoodById } from \"./ShopApi\";\n;\nconst initialState = {\n  food: [{\n    _id: \"1\",\n    Food_name: \"\",\n    prices: \"\",\n    expire_date: \"\",\n    FoodImage: \"\",\n    typeOfTaste: \"\",\n    age_permisssion: \"\",\n    Brand: \"\",\n    Ingredients: \"\",\n    Rating: \"\",\n    textStyle: \"\",\n    country: \"\",\n    ColorForStyle: \"\"\n  }]\n};\nexport const apiGetAllFood = createAsyncThunk('movie/getAllFood', async () => {\n  console.log(\"API get all foods\");\n  const response = await getAllFood();\n  console.log(\"All movie json \", response.data);\n  return response.data;\n});\nexport const apiSaveFood = createAsyncThunk('movie/saveFood', async food => {\n  console.log(\"API save  food\");\n  const response = await saveFood(food);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const getFooById = createAsyncThunk('movie/GetFoodById', async id => {\n  console.log(\"API get  food by id\");\n  const response = await GetFoodById(id);\n  console.log(\"save movie json \", response.data);\n  return response.data;\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState,\n  reducers: {\n    addMovie: (state, action) => {//state.items = [...state.items, action.payload];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(apiGetAllFood.fulfilled, (state, action) => {\n      console.log(\"Api fullfilled \", action.payload);\n      state.food = action.payload;\n    }).addCase(apiSaveFood.fulfilled, (state, action) => {\n      console.log(\"Api save food fulfilled \", action.payload);\n      state.food = [...state.food, action.payload];\n    });\n  }\n});\nexport const {\n  addMovie\n} = movieSlice.actions;\nexport const selectFood = state => state.food.food;\nexport const selectFoodById = (state, foodId) => state.food.food.filter(food => food._id == foodId)[0];\nexport default movieSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getAllFood","saveFood","GetFoodById","initialState","food","_id","Food_name","prices","expire_date","FoodImage","typeOfTaste","age_permisssion","Brand","Ingredients","Rating","textStyle","country","ColorForStyle","apiGetAllFood","console","log","response","data","apiSaveFood","getFooById","id","movieSlice","name","reducers","addMovie","state","action","extraReducers","builder","addCase","fulfilled","payload","actions","selectFood","selectFoodById","foodId","filter","reducer"],"sources":["/Users/aungzay/Downloads/TuringReact3rdBatch-master 3/react-redux-typescript/src/Shop/ShopSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../app/store';\nimport {ToDo, ToDoList} from \"../features/todos/todoSlice\";\nimport {getAllFood, saveFood,GetFoodById} from \"./ShopApi\";\n\nexport interface Food {\n    _id? : string,\n    Food_name: string,\n    prices: string,\n    expire_date:string,\n    FoodImage:string,\n    typeOfTaste:string,\n    age_permisssion:string,\n    Brand:string,\n    Ingredients:string,\n    Rating:string,\n    textStyle:string,\n    country:string,\n    ColorForStyle:string\n};\nexport interface MovieList {\n    food: Array<Food>\n}\n\nconst initialState: MovieList = {\n    food : [\n        {\n            _id : \"1\",\n            Food_name:\"\",\n            prices:\"\",\n            expire_date:\"\",\n            FoodImage:\"\",\n            typeOfTaste:\"\",\n            age_permisssion:\"\",\n            Brand:\"\",\n            Ingredients:\"\",\n            Rating:\"\",\n            textStyle:\"\",\n            country:\"\",\n            ColorForStyle:\"\"\n        }\n    ]\n};\nexport const apiGetAllFood = createAsyncThunk(\n    'movie/getAllFood',\n    async () => {\n        console.log(\"API get all foods\");\n        const response = await getAllFood();\n\n        console.log(\"All movie json \",response.data);\n        return response.data;\n    }\n);\nexport const apiSaveFood = createAsyncThunk(\n    'movie/saveFood',\n    async (food:Food) => {\n        console.log(\"API save  food\");\n        const response = await saveFood(food);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const getFooById = createAsyncThunk(\n    'movie/GetFoodById',\n    async (id:any) => {\n        console.log(\"API get  food by id\");\n        const response = await GetFoodById(id);\n\n        console.log(\"save movie json \",response.data);\n        return response.data;\n    }\n);\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState,\n    reducers: {\n        addMovie: (state, action: PayloadAction<ToDo>) => {\n            //state.items = [...state.items, action.payload];\n        },\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(apiGetAllFood.fulfilled, (state, action) => {\n                console.log(\"Api fullfilled \", action.payload);\n                state.food = action.payload;\n\n            })\n            .addCase(apiSaveFood.fulfilled, (state, action) => {\n                console.log(\"Api save food fulfilled \", action.payload);\n                state.food = [...state.food, action.payload];\n\n            })\n        }\n    }\n);\n\nexport const { addMovie } = movieSlice.actions;\nexport const selectFood = (state: RootState) => state.food.food;\nexport const selectFoodById =  (state: RootState,foodId:string) => state.food.food.filter(food=>food._id ==foodId)[0];\nexport default movieSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}